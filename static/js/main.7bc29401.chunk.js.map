{"version":3,"sources":["api/queries.tsx","App.tsx","index.tsx"],"names":["fetchData","query","Promise","resolve","reject","console","log","process","fetch","then","data","catch","err","Math","random","toString","Loading","BaseComponent","timeRange","refreshInterval_Secs","componentName","useState","isLoading","setIsLoading","setData","genQuery","__data","useEffect","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAQO,SAASA,EAAUC,GACtB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAGzBC,QAAQC,IAAI,MAAOC,sIAEnBC,MAAM,GAAD,OAbI,wBAaJ,YAZW,aAaXC,MAAK,SAACC,GAAD,OAAUP,EAAQO,MACvBC,OAAM,SAACC,GAAD,OAAST,EAAQU,KAAKC,SAASC,SAAS,WCa3D,SAASC,IACL,OAAO,uCAGX,SAASC,EAAT,GAAkF,IAA1DC,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,qBAAsBC,EAAwB,EAAxBA,cAAwB,EAC3CC,oBAAkB,GADyB,mBACtEC,EADsE,KAC3DC,EAD2D,OAErDF,mBAAiB,IAFoC,mBAEtEX,EAFsE,KAEhEc,EAFgE,KAMvEhB,GDnCH,SAAkBU,EAAmBE,GAClC,UAAN,OAAiBF,EAAjB,sBAAwCE,GCgC1BK,CAASP,EAAWE,GAEpB,kBACVpB,IACKS,MAAK,SAACiB,GACHH,GAAa,GACbC,EAAQE,MAEXf,OAAM,SAACC,GACJW,GAAa,GACblB,QAAQC,IAAI,OAAQM,GACpBY,EAAQ,SAWpB,OARAG,qBAAU,WACNnB,MACD,IA3CP,SAAqBoB,EAAeC,GAChC,IAAMC,EAAqBC,mBAE3BJ,qBAAU,WACNG,EAAcE,QAAUJ,IACzB,CAACA,IAEJD,qBAAU,WAKN,GAAc,OAAVE,EAAgB,CAChB,IAAII,EAAKC,aALb,WACIJ,EAAcE,YAIaH,GAC3B,OAAO,kBAAMM,cAAcF,OAEhC,CAACJ,IA6BJO,EAAY,WACR5B,MACsB,IAAvBW,GAGC,6BACKG,EAAY,kBAACN,EAAD,MAAcN,GAiBxB2B,MAZf,WACI,OACI,6BACI,kBAACpB,EAAD,CAAeC,UAAU,MAAMC,qBAAsB,GAAIC,cAAc,OACvE,kBAACH,EAAD,CAAeC,UAAU,MAAMC,qBAAsB,GAAIC,cAAc,OACvE,kBAACH,EAAD,CAAeC,UAAU,MAAMC,qBAAsB,GAAIC,cAAc,OACvE,kBAACH,EAAD,CAAeC,UAAU,MAAMC,qBAAsB,GAAIC,cAAc,OACvE,kBAACH,EAAD,CAAeC,UAAU,MAAMC,qBAAsB,GAAIC,cAAc,SCpEnFkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7bc29401.chunk.js","sourcesContent":["const DEV_SVR = \"https://dev.acme.com\";\nconst PROD_SVR = \"https://prod.acme.com\";\nconst METRIC_ENDPOINT = \"/metrics\";\n\nexport function genQuery(timeRange: string, componentName: string): string {\n    return `SELECT ${timeRange} WHERE c = ${componentName}`;\n}\n\nexport function fetchData(query: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n        const api = process.env.NODE_ENV === \"production\" ? PROD_SVR : DEV_SVR;\n\n        console.log('ENV', process.env);\n\n        fetch(`${api}/${METRIC_ENDPOINT}`)\n            .then((data) => resolve(data))\n            .catch((err) => resolve(Math.random().toString(20)));\n    });\n}\n","import React, {useState, useEffect, useRef} from \"react\";\nimport \"./App.css\";\nimport { genQuery, fetchData } from \"./api/queries\";\n\ninterface IProps {\n    timeRange: string;\n    refreshInterval_Secs: number;\n    componentName: string;\n}\n\nfunction useInterval(callback: any, delay: number) {\n    const savedCallback: any = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nfunction Loading() {\n    return <h2>Loading</h2>;\n}\n\nfunction BaseComponent({timeRange, refreshInterval_Secs, componentName}: IProps) {\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [data, setData] = useState<string>(\"\");\n\n    const query = genQuery(timeRange, componentName);\n\n    const fetch = () =>\n        fetchData(query)\n            .then((__data: string) => {\n                setIsLoading(false);\n                setData(__data);\n            })\n            .catch((err) => {\n                setIsLoading(false);\n                console.log(\"Err:\", err);\n                setData(\"\");\n            });\n\n    useEffect(() => {\n        fetch();\n    }, []);\n\n    useInterval(() => {\n        fetch();\n    }, refreshInterval_Secs * 1000);\n\n    return (\n        <div>\n            {isLoading ? <Loading /> : data}\n        </div>\n    );\n}\n\nfunction App() {\n    return (\n        <div>\n            <BaseComponent timeRange=\"250\" refreshInterval_Secs={60} componentName=\"c1\" />\n            <BaseComponent timeRange=\"250\" refreshInterval_Secs={10} componentName=\"c2\" />\n            <BaseComponent timeRange=\"250\" refreshInterval_Secs={15} componentName=\"c3\" />\n            <BaseComponent timeRange=\"250\" refreshInterval_Secs={42} componentName=\"c4\" />\n            <BaseComponent timeRange=\"250\" refreshInterval_Secs={30} componentName=\"c5\" />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}